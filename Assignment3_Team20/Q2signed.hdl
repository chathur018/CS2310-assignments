/**
*4-bit CLA based 16-bit adder 
*without using higher-level propagate and generate terms
*Delay = (2 + 2[n/4])T    ([] represents ceiling)
*/
CHIP Q2signed {
    IN x[16], y[16], a;
    OUT s[16], of;
    
    PARTS:
//c0 = (a')' = a
    Not(in=a, out=nota);
    Not(in=nota, out=c0);
    Or(a=a, b=nota, out=true);
    And(a=a, b=nota, out=false);

//t = y if a=0, else t will be negated.
    Xor(a=y[0], b=a ,out=t0);
    Xor(a=y[1], b=a ,out=t1);
    Xor(a=y[2], b=a ,out=t2);
    Xor(a=y[3], b=a ,out=t3);    
    Xor(a=y[4], b=a ,out=t4);
    Xor(a=y[5], b=a ,out=t5);
    Xor(a=y[6], b=a ,out=t6);
    Xor(a=y[7], b=a ,out=t7);
    Xor(a=y[8], b=a ,out=t8);
    Xor(a=y[9], b=a ,out=t9);
    Xor(a=y[10], b=a ,out=t10);
    Xor(a=y[11], b=a ,out=t11);
    Xor(a=y[12], b=a ,out=t12);
    Xor(a=y[13], b=a ,out=t13);
    Xor(a=y[14], b=a ,out=t14);
    Xor(a=y[15], b=a ,out=t15);

//p[i] =  x[i] ^ t[i] 
    Xor(a=x[0], b=t0 ,out=p0);
    Xor(a=x[1], b=t1 ,out=p1);
    Xor(a=x[2], b=t2 ,out=p2);
    Xor(a=x[3], b=t3 ,out=p3);    
    Xor(a=x[4], b=t4 ,out=p4);
    Xor(a=x[5], b=t5 ,out=p5);
    Xor(a=x[6], b=t6 ,out=p6);
    Xor(a=x[7], b=t7 ,out=p7);
    Xor(a=x[8], b=t8 ,out=p8);
    Xor(a=x[9], b=t9 ,out=p9);
    Xor(a=x[10], b=t10 ,out=p10);
    Xor(a=x[11], b=t11 ,out=p11);
    Xor(a=x[12], b=t12 ,out=p12);
    Xor(a=x[13], b=t13 ,out=p13);
    Xor(a=x[14], b=t14 ,out=p14);
    Xor(a=x[15], b=t15 ,out=p15);

//g[i] = x[i].y[i] 
    And(a=x[0], b=t0 ,out=g0);
    And(a=x[1], b=t1 ,out=g1);
    And(a=x[2], b=t2 ,out=g2);
    And(a=x[3], b=t3 ,out=g3);    
    And(a=x[4], b=t4 ,out=g4);
    And(a=x[5], b=t5 ,out=g5);
    And(a=x[6], b=t6 ,out=g6);
    And(a=x[7], b=t7 ,out=g7);
    And(a=x[8], b=t8 ,out=g8);
    And(a=x[9], b=t9 ,out=g9);
    And(a=x[10], b=t10 ,out=g10);
    And(a=x[11], b=t11 ,out=g11);
    And(a=x[12], b=t12 ,out=g12);
    And(a=x[13], b=t13 ,out=g13);
    And(a=x[14], b=t14 ,out=g14);
    And(a=x[15], b=t15 ,out=g15);

//c4 =p3.p2.p1.p0.c0 + p3.p2.p1.g0 + p3.p2.g1 + p3.g2 + g3

    And(a=p0, b=c0, out=i0);
    Or(a=i0, b=g0, out=c1);

    And4(a=p1, b=p0, c=c0, d=true, out=i1);
    And(a=p1, b=g0, out=i2);
    Or4(a=i1, b=i2, c=g1, d=false, out=c2);

    And4(a=p2, b=p1, c=p0, d=c0, out=i3);
    And4(a=p2, b=p1, c=g0, d=true, out=i4);
    And(a=p2, b=g1, out=i5);
    Or4(a=i3, b=i4, c=i5, d=g2, out=c3);

/*c4*/And5(a=p3, b=p2, c=p1, d=p0, e=c0, out=i6);
    And4(a=p3, b=p2, c=p1, d=g0, out=i7);  
    And4(a=p3, b=p2, c=g1, d=true, out=i8);
    And(a=p3, b=g2, out=i9);
    Or5(a=i6, b=i7, c=i8, d=i9, e=g3, out=c4);

    And(a=p4, b=c4, out=j0);
    Or(a=j0, b=g4, out=c5);

    And4(a=p5, b=p4, c=c4, d=true, out=j1);
    And(a=p5, b=g4, out=j2);
    Or4(a=j1, b=j2, c=g5, d=false, out=c6);

    And4(a=p6, b=p5, c=p4, d=c4, out=j3);
    And4(a=p6, b=p5, c=g4, d=true, out=j4);
    And(a=p6, b=g5, out=j5);
    Or4(a=j3, b=j4, c=j5, d=g6, out=c7);

/*c8*/And5(a=p7, b=p6, c=p5, d=p4, e=c4, out=j6);
    And4(a=p7, b=p6, c=p5, d=g4, out=j7);  
    And4(a=p7, b=p6, c=g5, d=true, out=j8);
    And(a=p7, b=g6, out=j9);
    Or5(a=j6, b=j7, c=j8, d=j9, e=g7, out=c8);


    And(a=p8, b=c8, out=k0);
    Or(a=k0, b=g8, out=c9);

    And4(a=p9, b=p8, c=c8, d=true, out=k1);
    And(a=p9, b=g8, out=k2);
    Or4(a=k1, b=k2, c=g9, d=false, out=c10);

    And4(a=p10, b=p9, c=p8, d=c8, out=k3);
    And4(a=p10, b=p9, c=g8, d=true, out=k4);
    And(a=p10, b=g9, out=k5);
    Or4(a=k3, b=k4, c=k5, d=g10, out=c11);

/*c12*/And5(a=p11, b=p10, c=p9, d=p8, e=c8, out=k6);
    And4(a=p11, b=p10, c=p9, d=g8, out=k7);  
    And4(a=p11, b=p10, c=g9, d=true, out=k8);
    And(a=p11, b=g10, out=k9);
    Or5(a=k6, b=k7, c=k8, d=k9, e=g11, out=c12);

    And(a=p12, b=c12, out=l0);
    Or(a=l0, b=g12, out=c13);

    And4(a=p13, b=p12, c=c12, d=true, out=l1);
    And(a=p13, b=g12, out=l2);
    Or4(a=l1, b=l2, c=g13, d=false, out=c14);

    And4(a=p14, b=p13, c=p12, d=c12, out=l3);
    And4(a=p14, b=p13, c=g12, d=true, out=l4);
    And(a=p14, b=g13, out=l5);
    Or4(a=l3, b=l4, c=l5, d=g14, out=c15);

/*c16*/And5(a=p15, b=p14, c=p13, d=p12, e=c12, out=l6);
    And4(a=p15, b=p14, c=p13, d=g12, out=l7);  
    And4(a=p15, b=p14, c=g13, d=true, out=l8);
    And(a=p15, b=g14, out=l9);
    Or5(a=l6, b=l7, c=l8, d=l9, e=g15, out=c16);

//s[i] = p[i] ^ c[i]
    Xor(a=p0, b=c0, out=s[0]);
    Xor(a=p1, b=c1, out=s[1]);
    Xor(a=p2, b=c2, out=s[2]);
    Xor(a=p3, b=c3, out=s[3]);
    Xor(a=p4, b=c4, out=s[4]);
    Xor(a=p5, b=c5, out=s[5]);
    Xor(a=p6, b=c6, out=s[6]);
    Xor(a=p7, b=c7, out=s[7]);
    Xor(a=p8, b=c8, out=s[8]);
    Xor(a=p9, b=c9, out=s[9]);
    Xor(a=p10, b=c10, out=s[10]);
    Xor(a=p11, b=c11, out=s[11]);
    Xor(a=p12, b=c12, out=s[12]);
    Xor(a=p13, b=c13, out=s[13]);
    Xor(a=p14, b=c14, out=s[14]);
    Xor(a=p15, b=c15, out=s[15]);

//of = c16^c15
    Xor(a=c16, b=c15, out=of);


    

    
}